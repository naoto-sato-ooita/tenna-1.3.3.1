ELEVENLABS

Rules for AI
Always respond in Japanese.

.cursorrules
■ このアプリケーションの概要
「noize - ASMR for Work」という、ユーザー投稿型の音声ストリーミングのサービスです。
このアプリで扱う音声は人の言葉ではなく、聞いてて心地の良い
ASMRと呼ばれる環境音になります


ユースケース
・ユーザーは、アプリ上で音声の視聴と投稿ができます
・視聴する際はホーム画面から音源を選択して再生、またリワード広告を視聴することで
　その選択した音源をユーザー個人のライブラリにダウンロード、保存することができます
　保存した音声ファイルはライブラリ画面に表示され、そこで再生や削除といった管理ができます
・投稿する際は、音声ファイルをタイトルなどの関連データとともに、サーバーへアップロードします
・移動中や勉強時に、このアプリが使われることを想定している為、UIはシンプルにします

データモデル
・ユーザーデータは以下の情報を含みます
　ユーザーID、ユーザー名、ライブラリに追加した音源ID、投稿した音源のID
・音源データは以下の情報を含みます
　音源ID、タイトル、音声データ、音声データの長さ(例：10分40秒)、ジャケット画像、投稿者名、再生回数、保存回数、最後の再生日時
　保存したユーザーのID

ユーザー認証
・ログイン画面は設けず、ユーザーが特定の動作を行った際にユーザー名の入力を促し、IDを自動で付します、
　ユーザーデータモデルはUserDefaultに保存して、以降作成済かの確認を行い、作成済なら読み出し、そのデータを使用することで
　ユーザーの一意性を確保します
　特定の動作とは、初めて投稿した時、または初めてライブラリに保存した時です
　またお気に入り作成に関しても、その際初めて、作成されま、同様にUserDefaultで管理します

View構成
・アプリ起動中はSplashViewに遷移します、起動後はホーム画面に遷移します。
・ホーム画面の上部にはタブがあり、タブからホーム画面とライブラリ画面を切り替えます
・そのほか、その日の音源の保存回数上位2つと、投稿日時が最も新しい音源１つの３つだけが横並びで表示されます
・ライブラリ画面では、保存した音源のジャケット画像が3列x3行のグリッドで表示されます
　最近再生したものほど、上の行に来るよう再生の際に入れ替えを行います
・投稿はホーム画面の右上に"円形のCDのような"ボタンを配置、そこから投稿Viewに遷移します

UI
・グラスモーフィズム
・音声を再生している時の背景色は白、していない時はパープルです
・煙のような浮遊感ある

その他制限
・ライブラリには最大9つの音源のみを保存することができます、それ以上を保存しようとしても、追加できない旨のアラートが表示される
・再生、停止はバックグラウンドでも有効にしてください
・再生する際のアニメーションとして、ライブラリの画像を選択状態にします、その後、再生ボタンを押すと再生ボタンから煙が上がり、
　画面上を煙が充満し始めます、
・投稿の設定オプションにアノニマスを追加します、アノニマスは音声データ以外の情報を入力せずに匿名で投稿できます


■ 主な技術スタック
- Swift
- Firebase

■ 実装時の注意点
- 常に既存コードの設計や記法を参考にしてください。
- TypeScriptにおいては、any型の使用は避けてください。
- クラスのmain関数が長くなる場合、適切な粒度でメソッドを分割してください。
- 書籍「リーダブルコード」のようなベストプラクティスを常に適用してください。
- コードの意図・背景などのコメントを各行に積極的に入れてください。また関数にはJSDocを入れることが推奨されます。

■ バックエンドのディレクトリ構成

Firestore.collection"users"
Firestore.collection"voices"


.cursorignore
# .env
.env
.env.*


youtubeからとってくるか
耳マイクないな
バイノーラル音源で生成AI
ブラックホールの音
木製探査機
花火の音
